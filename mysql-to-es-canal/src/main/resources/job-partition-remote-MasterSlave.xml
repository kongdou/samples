<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
	xmlns:bean="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/task
    http://www.springframework.org/schema/task/spring-task.xsd
    http://www.springframework.org/schema/integration 
    http://www.springframework.org/schema/integration/spring-integration-4.3.xsd
    http://www.springframework.org/schema/integration/jms 
    http://www.springframework.org/schema/integration/jms/spring-integration-jms-4.3.xsd
    http://www.springframework.org/schema/jms 
    http://www.springframework.org/schema/jms/spring-jms.xsd
    http://activemq.apache.org/schema/core 
    http://activemq.apache.org/schema/core/activemq-core.xsd">
	
	<!-- <bean:import resource="classpath:ch11/job-context.xml" /> -->
	<bean:import resource="classpath:job-jdbc-context.xml" />

	<!-- Master job -->
	<job id="partitionRemoteJob">
		<step id="partitionRemoteStep">
			<partition partitioner="partitioner" handler="partitionHandler" />
		</step>
	</job>

	<bean:bean id="partitioner"
		class="org.springframework.batch.core.partition.support.MultiResourcePartitioner">
		<bean:property name="keyName" value="fileName" />
		<bean:property name="resources" value="classpath:data/flat/*.csv" />
	</bean:bean>

	<bean:bean id="partitionHandler"
		class="org.springframework.batch.integration.partition.MessageChannelPartitionHandler">
		<bean:property name="messagingOperations">
			<bean:bean class="org.springframework.integration.core.MessagingTemplate">
				<bean:property name="defaultChannel" ref="MasterRequestChannel" />
				<bean:property name="receiveTimeout" value="30000" />
			</bean:bean>
		</bean:property>
		<bean:property name="replyChannel" ref="AggregatedChannel" />
		<bean:property name="stepName" value="remoteStep" />
		<bean:property name="gridSize" value="3" />
	</bean:bean>
	
	<!-- Master jms -->
	<int:channel id="MasterRequestChannel">
		<int:dispatcher task-executor="RequestPublishExecutor" />
	</int:channel>
	
	<task:executor id="RequestPublishExecutor" pool-size="5-10"
		queue-capacity="0" />
	<!-- <int-jms:outbound-channel-adapter connection-factory="connectionFactory" 
		destination-name="RequestQueue" channel="MasterRequestChannel"/> -->

	<int:channel id="MasterReplyChannel" />
	<!-- <int-jms:message-driven-channel-adapter connection-factory="connectionFactory" 
		destination-name="ReplyQueue" channel="MasterReplyChannel"/> -->

	<int-jms:outbound-gateway connection-factory="connectionFactory"
		correlation-key="JMSCorrelationID" request-channel="MasterRequestChannel"
		request-destination-name="RequestQueue" receive-timeout="30000"
		reply-channel="MasterReplyChannel" reply-destination-name="ReplyQueue"
		async="true">
		<int-jms:reply-listener />
	</int-jms:outbound-gateway>

	<int:channel id="AggregatedChannel">
		<int:queue />
	</int:channel>
	<int:aggregator ref="partitionHandler" input-channel="MasterReplyChannel"
		output-channel="AggregatedChannel" />

	<!-- Slave jms -->
	<int:channel id="SlaveRequestChannel" />
	<!-- <int-jms:message-driven-channel-adapter connection-factory="connectionFactory" 
		destination-name="RequestQueue" channel="SlaveRequestChannel"/> -->

	<int:channel id="SlaveReplyChannel" />
	<!-- <int-jms:outbound-channel-adapter connection-factory="connectionFactory" 
		destination-name="ReplyQueue" channel="SlaveReplyChannel"/> -->

	<int-jms:inbound-gateway connection-factory="connectionFactory"
		correlation-key="JMSCorrelationID" request-channel="SlaveRequestChannel"
		request-destination-name="RequestQueue" reply-channel="SlaveReplyChannel"
		default-reply-queue-name="ReplyQueue" />

	<int:service-activator ref="stepExecutionRequestHandler"
		input-channel="SlaveRequestChannel" output-channel="SlaveReplyChannel" />

	<!-- RemoteStep for Slave -->
	<step id="remoteStep">
		<tasklet>
			<chunk reader="flatFileItemReader" writer="jdbcItemWriter"
				commit-interval="10" />
			<listeners>
				<listener ref="partitionItemReadListener"></listener>
			</listeners>
		</tasklet>
	</step>

	<bean:bean id="stepExecutionRequestHandler"
		class="org.springframework.batch.integration.partition.StepExecutionRequestHandler">
		<bean:property name="jobExplorer" ref="jobExplorer" />
		<bean:property name="stepLocator" ref="stepLocator" />
	</bean:bean>

	<amq:broker useJmx="false" persistent="false"
		schedulerSupport="false">
		<!-- 
		<amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:61616?trace=true" />
		</amq:transportConnectors>
		 -->
	</amq:broker>
	<amq:connectionFactory id="connectionFactory"
		brokerURL="tcp://localhost:61616" />
	<!-- trustAllPackages="true" -->
	<bean:bean
		class="org.springframework.beans.factory.config.CustomScopeConfigurer">
		<bean:property name="scopes">
			<bean:map>
				<bean:entry key="thread">
					<bean:bean class="org.springframework.context.support.SimpleThreadScope" />
				</bean:entry>
			</bean:map>
		</bean:property>
	</bean:bean>

	<bean:bean id="flatFileItemReader" scope="step"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<bean:property name="resource" value="#{stepExecutionContext[fileName]}" />
		<bean:property name="lineMapper" ref="lineMapper" />
	</bean:bean>

	<bean:bean id="lineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<bean:property name="lineTokenizer" ref="delimitedLineTokenizer" />
		<bean:property name="fieldSetMapper" ref="creditBillFieldSetMapper" />
	</bean:bean>

	<bean:bean id="delimitedLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<bean:property name="delimiter" value="," />
		<bean:property name="names"
			value="id,accountID,name,amount,date,address" />
	</bean:bean>

	<bean:bean id="creditBillFieldSetMapper"
		class="fun.deepsky.springbatch.parallel.partition.step.CreditBillFieldSetMapper">
	</bean:bean>

	<bean:bean id="jdbcItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<bean:property name="dataSource" ref="dataSource" />
		<bean:property name="sql"
			value="insert into t_destcredit (ID,ACCOUNTID,NAME,AMOUNT,DATE,ADDRESS) values (:id,:accountID,:name,:amount,:date,:address)" />
		<bean:property name="itemSqlParameterSourceProvider">
			<bean:bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</bean:property>
	</bean:bean>

	<bean:bean id="creditBillProcessor" scope="step"
		class="fun.deepsky.springbatch.parallel.partition.step.CreditBillProcessor">
	</bean:bean>

	<bean:bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<bean:property name="corePoolSize" value="5" />
		<bean:property name="maxPoolSize" value="5" />
	</bean:bean>

	<bean:bean id="partitionItemReadListener"
		class="fun.deepsky.springbatch.parallel.partition.step.PartitionStepExecutionListener">
	</bean:bean>
</bean:beans>